{% extends "charts/layout.twig" %}

{% block title %}{{ parent() }} - Samples Chart{% endblock %}

{% block content %}
    <div id="chart-wrapper">
        <div id="chart"></div>
        <div id="chart-control"></div>
        <div class="chart-caption">
            <a id='chart-refresh' href='#' class="disabled">Refresh</a> |
            <a id='chart-data' href="/data/samples.json">JSON</a>
        </div>
    </div>
{% endblock %}

{% block footerInlineScripts %}
    {{ parent() }}
    <script type="text/javascript">
        $(function () {
            var dashboard,
                chartWrapper,
                chartData,
                dataView,
                controlWrapper,
                userVisibleColumns,
                columns = [
                    {
                        index: 0,
                        key: 'date',
                        type: 'datetime',
                        label: 'Date',
                        value: function(row) {
                            return new Date(row.when);
                        }
                    },
                    {
                        index: 1,
                        key: 'critical',
                        type: 'number',
                        label: 'Critical',
                        color: '#DB4437',
                        disabledColor: '#FFD9D9',
                        trendline: true,
                        visible: true,
                        value: function(row) {
                            if (
                                typeof row.critical_bugs === 'undefined' ||
                                row.critical_bugs === null ||
                                typeof row.critical_tasks === 'undefined' ||
                                row.critical_tasks === null
                            ) {
                                return null;
                            }

                            return row.critical_bugs + row.critical_tasks;
                        }
                    },
                    {
                        index: 2,
                        key: 'major',
                        type: 'number',
                        label: 'Major',
                        color: '#4285F4',
                        disabledColor: '#D9D9FF',
                        trendline: true,
                        visible: false,
                        value: function(row) {
                            if (
                                typeof row.major_bugs === 'undefined' ||
                                row.major_bugs === null ||
                                typeof row.major_tasks === 'undefined' ||
                                row.major_tasks === null
                            ) {
                                return null;
                            }

                            return row.major_bugs + row.major_tasks;
                        }
                    },
                    {
                        index: 3,
                        key: 'normal',
                        type: 'number',
                        label: 'Normal',
                        color: '#008000',
                        disabledColor: '#C3E6C3',
                        trendline: true,
                        visible: false,
                        value: function(row) {
                            if (
                                typeof row.normal_bugs === 'undefined' ||
                                row.normal_bugs === null ||
                                typeof row.normal_tasks === 'undefined' ||
                                row.normal_tasks === null
                            ) {
                                return null;
                            }

                            return row.normal_bugs + row.normal_tasks;
                        }
                    },
                    {
                        index: 4,
                        key: 'beta_blockers',
                        type: 'number',
                        label: 'Beta Blockers',
                        color: '#F4B400',
                        disabledColor: '#F2E5CE',
                        trendline: false,
                        visible: false,
                        value: function(row) {
                            if (typeof row.beta_blockers === 'undefined') {
                                return null;
                            }
                            return row.beta_blockers;
                        }
                    },
                    {
                        index: 5,
                        key: 'rtbc',
                        type: 'number',
                        label: 'RTBC',
                        color: '#795892',
                        disabledColor: '#AE9ABE',
                        trendline: false,
                        visible: false,
                        value: function(row) {
                            if (typeof row.rtbc === 'undefined') {
                                return null;
                            }
                            return row.rtbc;
                        }
                    }
                ];

            // Load user's last column visibility state if available.
            if (window.localStorage) {
                userVisibleColumns = window.localStorage.getItem('chart.samples.visible-columns');
                userVisibleColumns = userVisibleColumns? JSON.parse(userVisibleColumns) : {};

                for (var i = 1; i < columns.length; i++) {
                    if (typeof userVisibleColumns[columns[i].key] !== 'undefined') {
                        columns[i].visible = userVisibleColumns[columns[i].key];
                    }
                }
            }

            google.setOnLoadCallback(initializeChart);

            var resizeTimeout = null;
            var redrawChart = function () {
                Timing.start('chart.redraw');
                drawChart();
                Timing.stop('chart.redraw');

                if (typeof GoogleAnalyticsObject !== 'undefined') {
                    window[GoogleAnalyticsObject]('send', 'timing', 'chart', 'redraw', Timing.get('chart.redraw'), 'samples');
                }
            };
            $(window).resize(function () {
                clearTimeout(resizeTimeout);
                resizeTimeout = setTimeout(redrawChart, 100);
            });

            $('#chart-refresh').click(function (event) {
                event.preventDefault();

                var $link = $(this);

                if ($link.hasClass('disabled')) {
                    return;
                }

                $link.addClass('disabled');
                $('#chart-wrapper').fadeTo('fast', 0.2, loadData);
            });

            function initializeChart() {
                dashboard = new google.visualization.Dashboard($('#chart-wrapper').get(0));

                var colors = [];
                for (var i = 1; i < columns.length; i++) {
                    colors.push(columns[i].color);
                }

                var controlStart = new Date();
                controlStart.setFullYear(controlStart.getFullYear(), controlStart.getMonth() - 6);
                var controlEnd = new Date();
                controlEnd.setFullYear(controlEnd.getFullYear()+1);

                controlWrapper = new google.visualization.ControlWrapper({
                    controlType: 'ChartRangeFilter',
                    containerId: 'chart-control',
                    options: {
                        filterColumnIndex: 0,
                        ui: {
                            chartType: 'LineChart',
                            chartOptions: {
                                chartArea: {
                                    width: '75%',
                                    height: '100%'
                                },
                                vAxis: {
                                    minValue: 0,
                                    maxValue: 1
                                },
                                colors: colors
                            },
                            // 1 week in milliseconds = 7 * 24 * 60 * 60 * 1000 = 604,800,000
                            minRangeSize: 604800000
                        }
                    },
                    state: {
                        range: {
                            start: controlStart,
                            end: controlEnd
                        }
                    }
                });

                chartWrapper = new google.visualization.ChartWrapper({
                    chartType: 'LineChart',
                    containerId: 'chart',
                    options: {
                        title: 'Issue Count',
                        // Use the same chart area width as the control for axis alignment.
                        chartArea: {
                            width: '75%',
                            height: '90%',
                            top: '6%'
                        },
                        hAxis: {},
                        vAxis: {
                            minValue: 0,
                            maxValue: 1
                        }
                    }
                });

                dashboard.bind(controlWrapper, chartWrapper);

                var readyListenerHandler =  google.visualization.events.addListener(chartWrapper, 'ready', function () {
                    var chart = chartWrapper.getChart();

                    // Toggle visibility of data series on click of legend.
                    google.visualization.events.addListener(chart, 'click', function (target) {
                        if (target.targetID.match(/^legendentry#\d+$/)) {

                            // Disable selection of entire data series.
                            setTimeout(function () {chart.setSelection(null)}, 0);

                            var index = parseInt(target.targetID.slice(12)) + 1;
                            columns[index].visible = !columns[index].visible;

                            if (window.localStorage) {
                                userVisibleColumns[columns[index].key] = columns[index].visible;
                                window.localStorage.setItem('chart.samples.visible-columns', JSON.stringify(userVisibleColumns));
                            }

                            redrawChart();
                        }
                    });

                    google.visualization.events.removeListener(readyListenerHandler);
                });

                loadData();
            }

            function loadData() {
                Timing.start('chart.loadData');

                $.get('/data/samples.json', function (response, textStatus, jqXHR) {
                    Timing.stop('chart.loadData');
                    Timing.start('chart.processData');

                    chartData = new google.visualization.DataTable();
                    for (var i = 0; i < columns.length; i++) {
                        chartData.addColumn(columns[i].type, columns[i].label);
                    }

                    dataView = new google.visualization.DataView(chartData);

                    var data = response.data;

                    for (var d in data) {
                        var row = [];
                        for (var i = 0; i < columns.length; i++) {
                            row.push(columns[i].value(data[d]));
                        }
                        chartData.addRow(row);
                    }
                    Timing.stop('chart.processData');

                    Timing.start('chart.firstDraw');
                    drawChart();
                    Timing.stop('chart.firstDraw');

                    if (typeof GoogleAnalyticsObject !== 'undefined') {
                        window[GoogleAnalyticsObject]('send', 'timing', 'data', 'load', Timing.get('chart.loadData'), 'samples');
                        window[GoogleAnalyticsObject]('send', 'timing', 'chart', 'processData', Timing.get('chart.processData'), 'samples');
                        window[GoogleAnalyticsObject]('send', 'timing', 'chart', 'firstDraw', Timing.get('chart.firstDraw'), 'samples');
                    }

                    $('#chart-refresh').removeClass('disabled');
                    $('#chart-wrapper').fadeTo('fast', 1);
                });
            }

            function drawChart() {
                var visibleColumnCount = 0;
                var visibleColumnIndexes = [0];
                var trendlines = {};
                var colors = [];

                for (var i = 1; i < columns.length; i++) {
                    if (columns[i].visible) {
                        if (columns[i].trendline) {
                            trendlines[i - 1] = {
                                visibleInLegend: false,
                                opacity: 0.2
                            };
                        }
                        colors.push(columns[i].color);

                        visibleColumnIndexes.push(i);
                        visibleColumnCount++;
                    }
                    else {
                      colors.push(columns[i].disabledColor);

                      visibleColumnIndexes.push({
                        calc: $.noop,
                        type: columns[i].type,
                        label: columns[i].label
                      });
                    }
                }
                dataView.setColumns(visibleColumnIndexes);
                chartWrapper.setOption('colors', colors);
                chartWrapper.setOption('trendlines', trendlines);

                dashboard.draw(dataView);
            }
        });
    </script>
{% endblock %}
