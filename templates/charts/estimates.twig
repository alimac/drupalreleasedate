{% extends "charts/layout.twig" %}

{% block title %}{{ parent() }} - Estimates Chart{% endblock %}

{% block content %}
<div id="chart"></div>
<div class="chart-caption">
    <a id='chart-refresh' href='#' class="disabled">Refresh</a> |
    <a id='chart-data' href="/data/estimates.json">JSON</a>
</div>
{% endblock %}

{% block footerInlineScripts %}
{{ parent() }}
<script type="text/javascript">

    $(function() {
      var chart, chartData;
      var $chart = $('#chart');

      google.setOnLoadCallback(loadChart);
      $(window).resize(drawChart);

      $('#chart-refresh').click(function(event) {
          event.preventDefault();

          var $link = $(this);

          if ($link.hasClass('disabled')) {
            return;
          }

          $link.addClass('disabled');
          $('#chart').fadeTo('fast', 0.2, loadChart);
      });

      function loadChart() {

          $.get('/data/estimates.json', function(response, textStatus, jqXHR) {

              chartData = new google.visualization.DataTable();

              chartData.addColumn('datetime', 'Time');
              chartData.addColumn('number', 'Estimates');
              chartData.addColumn('number', 'Failed Estimates');

              var data = response.data;

              for (var i in data) {
                var when = new Date(data[i].when.replace(' ', 'T'));
                var estimate = null;
                var error = null;
                if (data[i].estimate === null || data[i].estimate === '0000-00-00 00:00:00') {
                    error = {
                        v: 0,
                        f: 'N/A'
                    };
                }
                else {
                  var estimateDate = new Date(data[i].estimate.replace(' ', 'T'));
                  estimate = {
                      v:(estimateDate.getTime() - when.getTime()) / 1000,
                      f: estimateDate.toDateString()
                  }
                }

                chartData.addRow([
                    when,
                    estimate,
                    error
                ]);
              }

              drawChart();

              $('#chart-refresh').removeClass('disabled');
              $('#chart').fadeTo('fast', 1);
          });
      }

      function drawChart() {
          if (chart) {
              chart.clearChart();
              $chart.css('height', '');
          }
          else {
              chart = new google.visualization.ScatterChart($chart.get(0));
          }

          $chart.css('height', ($(document).height() * 0.8));

          chart.draw(
              chartData,
              {
                title: 'Estimate',
                hAxis: {},
                legend: 'none',
            }
          );
      }

    });
</script>
{% endblock %}
