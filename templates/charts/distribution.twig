{% extends "charts/layout.twig" %}

{% block title %}{{ parent() }} - Estimate Distribution Chart{% endblock %}

{% block content %}
    <div id="chart"></div>
    <div class="chart-caption">
        <a id='chart-data' href="/data/estimate.json">JSON</a>
    </div>
{% endblock %}

{% block footerInlineScripts %}
    {{ parent() }}
    <script type="text/javascript">

        $(function () {
            var chart, chartData;
            var $chart = $('#chart');

            google.setOnLoadCallback(loadChart);

            var resizeTimeout = null;
            var resizeFunction = function () {
                Timing.start('chart.redraw');
                drawChart();
                Timing.stop('chart.redraw');

                if (typeof GoogleAnalyticsObject !== 'undefined') {
                    window[GoogleAnalyticsObject]('send', 'timing', 'chart', 'redraw', Timing.get('chart.redraw'), 'distribution');
                }
            };
            $(window).resize(function () {
                clearTimeout(resizeTimeout);
                resizeTimeout = setTimeout(resizeFunction, 100);
            });

            function loadChart() {

                // Get date parameter from URL hash, and pass on to data request.
                var uri = '/data/estimate.json';
                if (window.location.hash) {
                    var hashParams = window.location.hash.replace(/^#/, '').split('&');
                    for (var i in hashParams) {
                        var hashParam = hashParams[i].split('=');
                        hashParams[i] = encodeURIComponent(hashParam[0]) + '=' + encodeURIComponent(hashParam[1]);
                    }
                    uri += '?' + hashParams.join('&');
                    $('#chart-data').attr('href', uri);
                }

                $.get(uri, function (response, textStatus, jqXHR) {
                    Timing.stop('chart.loadData');
                    Timing.start('chart.processData');

                    chartData = new google.visualization.DataTable();

                    chartData.addColumn('datetime', 'Estimate');
                    chartData.addColumn('number', 'Count');

                    var data = response.data;
                    var totalCount = 0;
                    for (var i in data.distribution) {
                        totalCount += data.distribution[i].count;
                    }
                    var countLimit = totalCount * 0.90;
                    var currentCount = 0;
                    for (var i in data.distribution) {
                        chartData.addRow([
                            new Date(data.distribution[i].when.replace(' ', 'T')),
                            data.distribution[i].count
                        ]);
                        currentCount += data.distribution[i].count;
                        if (currentCount > countLimit) {
                            break;
                        }
                    }
                    Timing.stop('chart.processData');

                    Timing.start('chart.firstDraw');
                    drawChart();
                    Timing.stop('chart.firstDraw');

                    if (typeof GoogleAnalyticsObject !== 'undefined') {
                        window[GoogleAnalyticsObject]('send', 'timing', 'data', 'load', Timing.get('chart.loadData'), 'distribution');
                        window[GoogleAnalyticsObject]('send', 'timing', 'chart', 'processData', Timing.get('chart.processData'), 'distribution');
                        window[GoogleAnalyticsObject]('send', 'timing', 'chart', 'firstDraw', Timing.get('chart.firstDraw'), 'distribution');
                    }
                });
            }

            function drawChart() {
                if (chart) {
                    chart.clearChart();
                    $chart.css('height', '');
                }
                else {
                    chart = new google.visualization.ColumnChart($chart.get(0));
                }

                chart.draw(
                    chartData,
                    {
                        title: 'Estimate Distribution',
                        hAxis: {},
                        vAxis: {},
                        legend: 'none'
                    }
                );
            }
        });
    </script>
{% endblock %}
